--------------------------------------------------------------------------------------------------------------------------------------------

Синтаксис - Теги "HTML".

Основная структура блока тега:

	<открывающий тег>...</закрывающий тег>

	где "..." - это его содержимое.

Некоторые (самостоятельные) теги не требуют парного тега для открытия/закрытия блока:

	<тег />

Самостоятельные теги могут быть так же использованы и как обычные теги (добавить закрывающий тег, для того, что бы добавить
содержимое в сам тег).

--------------------------------------------------------------------------------------------------------------------------------------------

Теги "HTML" документа.

Теги имеют вид:

	<тег>содержимое</тег>

или с атрибутами:

	<тег атрибут"аргумент">содержимое</тег>

или самостоятельный тег:

	<тег/>

или самостоятельный тег с атрибутами:

	<тег атрибут"аргумент" />

В теге могут быть несколько атрибутов одновременно:

	<тег атрибут="аргумент" атрибут="аргумент" атрибут="аргумент">содержимое</тег>

--------------------------------------------------------------------------------------------------------------------------------------------

Список тегов:

--------------------------------------------------------------------------------------------------------------------------------------------

<!-- ... -->

	Используется для создания комментария в структуре документа. Не отображается браузером,
	а нужен лишь для того чтобы добавить описание, заметки, напоминания и проччего.
	"..." -  комментарий.

<!DOCTYPE HTML>

	Объявление типа документа.

<html>...</html>

	Открывающий и закрывающие теги "HTML" докмента. С них начинается и заканчивается документ.
	"..." -  содержимое блока тега.

<head>...</head>

	За тегом "<html>" идет тег заголовка документа "<head>". Он содержит все невизуальные элементы
	HTML документа, которые управляют отображением страницы. "..." - содержимое блока тега.

<body>...</body>

	За тегом "<head>" идет тег тела документа "<body>". В тег "<body>" заключаются элементы, отвечающие
	за визуальное и структурное оформление документа, например: заголовки, параграфы, списки, цитаты,
	изобржения, ссылки ит.д. "..." - содержимое блока тега.

<title>...</title>

	Тег для помещения заголовка страницы на вкладку браузера. "..." - заголовок во вкладке.

<div>...</div>

	Блочный тег, часто использующийся как контейнер для других элементов "HTML". Позволяет определить блочный
	раздел в документе. При использовании с "CSS", позволяет задать стиль блокам контента.
	"..." - содержимое блока тега.

	Пример с использованием тега "<div>":

		<div style="background-color:green; color:white;">
			<p>Параграф текста</p>
			<p>Еще один параграф текста</p>
		</div>

<span>...</span>

	Строчный тег, часто использующийся как контейнер для текста. Позволяет определить строчный раздел в документе.
	При использовании с "CSS", позволяет задать стиль отдельным частям текста. "..." - содержимое тега.

	Пример с использованием тега "<span>":

		<h2>Некоторое
			<span style="color:red">важное</span>
		сообщение</h2>

<p>...</p>

	Тег для создания параграфа текста. "..." - содержимое параграфа.
	Не поддерживается в "HTML5".

<br />

	Самостоятельный тег для переноса строки, который создает отдельную строку текста.
	Этот тег является самостоятельным тегом, который не требует парного тега для закрытия/открытия.

<b>...</b>

	Тег для текста с жирным шрифтом. "..." -  содержимое тега.

<big>...</big>

	Тег для текста с крупным шрифтом. "..." -  содержимое тега.

<i>...</i>

	Тег для текста курсивом. "..." -  содержимое тега.

<small>...</small>

	Тег для текста с мелким шрифтом. "..." -  содержимое тега.

<strong>...</stong>

	Тег для важного текста. "..." -  содержимое тега.

<sub>...</sub>

	Тег для подстрочного текста. "..." -  содержимое тега.

<sup>...</sup>

	Тег для надстрочного текста. "..." -  содержимое тега.

<ins>...</ins>

	Тег для вставленного текста. "..." -  содержимое тега.

<del>...</del>

	Тег для удаленного текста. "..." -  содержимое тега.

<pre>...</pre>

	Тег для форматированного текста. "..." -  содержимое тега.

<h*>

	Самостоятельный тег уровней заголовков, где вместо "*" будет цифра от 1 до 6 (<h1>, <h2> ... <h6>),
	соответственно цифра обозначает уровень важности заголовка (с уровнем становится крупнее).
	Не рекомедуется к использованию, когда нужно просто выделить текст жирным шрифтом, так как они
	используются поисковыми системами для индексации структуры страницы и ее контента.

<hr />

	Самостоятельный тег для создания горизонтальной линии.

<img ... />

	Самостоятельный тег для вставки изображения. Он содержит только атрибуты, и не требует закрывающего тега.
	"..." -  атрибуты тега.

	Пример с использованием тега "<img />:

		<img src="image.jpg" alt="" />

	Где "src" - это атрибут ссылки, "image.jpg" - это ссылка на файл, "alt" - альтернативный текст для изображений.
	В случае если изображение не может быть отображено, толь атрибут "alt" в качестве альтернативы должен содержать
	текст со словесным описанием изображения (выдаст иконку ломанного изображения и текст: "image.jpg").
	Атрибут "alt" обязателен.

<a ...>...</a>

	Тег для вставки ссылки, где вместо первой "..." - будут атрибуты "href", с самой ссылкой, атрибут "target",
	указывающий на то, как открыть привязанный документ (ссылку), и т.д. Вместо второй "..." - будет текст,
	который будет отображаться как гиперссылка.
	Чтобы ссылка была рабочей, нужно чтобы перед ней обязательно были "http://" или "https://".
	Чтобы сделать изображение ссылкой, нужно вставить тег "<img />" в тег "<a>".
	Чтобы добаить всплывающую подсказку, при наведении курсора на ссылку, нужно добавить атрибут "title".
	
	Атрибуты тега "<a>":
	
		accesskey - активация ссылки с помощью комбинации клавиш.

		coords - устанавливает координаты активной области.

		download - предлагает скачать указанный по ссылке файл.

		href - задает адрес документа, на который следует перейти.

		hreflang - идентифицирует язык текста по ссылке.

		name - устанавливает имя якоря внутри документа.

		rel - отношения между ссылаемым и текущим документами. Его аргументы приведены в отдельном документе.

		rev - отношения между текущим и ссылаемым документами.

		shape - задает форму активной области ссылки для изображений.

		tabindex - определяет последовательность перехода между ссылками при нажатии на кнопку "Tab".

		target - имя окна или фрейма, куда браузер будет загружать документ.

		title - добавляет всплывающую подсказку к тексту ссылки.

		type - указывает "MIME"-тип документа, на который ведёт ссылка.
	
	Пример с использованием тега "<a>":

		<a href="http://vk.com" title="ВК">В Контакте</a>

	В этом примере при нажатии на слово (гиперссылку) "В Контакте", откроется сайт "vk.com".

	Пример с атрибутом "target":

		<a href="http://vk.com" title="ВК" target="_blank">В Контакте</a>

	В этом примере при нажатии на слово (гиперссылку) "В Контакте", откроется сайт "vk.com" в новой вкладке.

<ol>...</ol>

	Тег, с которого начинается нумерованный список, где "..." - его пункты. Сами пункты списка указываются
	с помощью тега "<li>".

	Пример нумерованного списка:

		<ol>
			<li>красный</li>
			<li>синий</li>
			<li>зеленый</li>
		<ol/>

<ul>...</ul>

	Тег, с которого начинается ненумерованный список, где "..." - его пункты. Сами пункты списка указываются
	с помощью тега "<li>".

	Пример ненумерованного списка:

		<ul>
			<li>красный</li>
			<li>синий</li>
			<li>зеленый</li>
		<ul/>

<li>...</li>

	Тег, указывающий на пункты в списке, в тегах "<ol>" и "<ul>", где "..." - его содержание. При использовании тега "<ol>"
	с тегом	"<li>", пункты списка нумеруются, и нумеруются автоматически. При использовании тега "<ul>" с тегом "<li>",
	пункты списка маркируются, и маркируются автоматически.

<table>...</table>

	Тег, для создания таблицы, где "..." - это содержимое из строк и столбцов. Тег "<table>" состоит из тегов "<tr>" и "<td>"
	(строки и столбцы). Среди атрибутов есть атрибуты "rules", "summary".
	Подробнее в атрибуте "rules".

	Пример таблицы:

		<table border="2">
			<tr>
				<td>Красный</td>
				<td>Белый</td>
				<td>Зеленый</td>
			</tr>
			<tr>
				<td>Синий</td>
				<td bgcolor="red">Красный</td>
				<td>Серый</td>
			</tr>
			<tr>
				<td>Черный</td>
				<td colspan="2"></td>
			</tr>
		</table>

<caption>...</caption>

	Тег, для создания заголовка к таблице и может размещаться только внутри контейнера "<table>",
	причем сразу после открывающего тега. Такой заголовок представляет собой текст,
	по умолчанию отображаемый перед таблицей и описывающий ее содержание, где на месте "..." - содержание тега.
	
	Атрибуты тега "<caption>":
	
		
		align - Определяет выравнивание заголовка по горизонтали.
		valign - Устанавливает расположение заголовка до или после таблицы.
		
	Пример использования тега "<caption>":
	
		<table>
			<caption>Текст</caption>
			<tr>
				<td>...</td>
			</tr>
		</table>

<tbody />
<tbody>...</tbody>

	Элемент "<tbody>" предназначен для хранения одной или нескольких строк таблицы. Это позволяет создавать
	структурные блоки, к которым можно применять единое оформление через стили, а также управлять их видом через скрипты.

	Допускается применять несколько тегов "<tbody>" внутри контейнера "<table>". Доступны и другие виды
	группировок строк — "<tfoot>" и "<thead>", ни один из них не должен перекрываться с элементом "<tbody>".
	
	Атрибуты тега "<tbody>":
	
		align - Определяет выравнивание текста в строке.

		char - Выравнивание содержимого ячеек относительно заданного символа.

		charoff - Смещение содержимого ячеек относительно указанного символа.

		bgcolor - Цвет фона ячеек, которые расположены внутри контейнера <tbody>.

		valign - Выравнивание содержимого ячеек по вертикали.
		
	Пример использования тега "<tbody>":
	
		 <table width="600" border="1">
			<tbody align="right">
				<tr>
					<td>Ячейка 1</td>
					<td>Ячейка 2</td> 
				</tr> 
			</tbody>
		</table>

<thead />
<thead>...</thead>

	Элемент "<thead>" предназначен для хранения одной или нескольких строк, которые представлены вверху таблицы.
	Допустимо использовать не более одного элемента "<thead>" в пределах одной таблицы, и он должен идти в
	исходном коде сразу после тега <table>.
	
	Атрибуты тега "<thead>":
	
		align - Определяет выравнивание текста в строке.

		char - Выравнивание содержимого ячеек относительно заданного символа.

		charoff - Смещение содержимого ячеек относительно указанного символа.

		bgcolor - Цвет фона ячеек, которые расположены внутри контейнера <thead>.

		valign - Выравнивание содержимого ячеек по вертикали.
	
	Пример использования тега "<thead>":
	
		<table style="width: 600px;">
			<thead style="background: #fc0">
				<tr>
					<td> ... </td>
					<td> ... </td> 
				</tr> 
			</thead>
			<tbody style="background: #ccc">
				<tr>
					<td> ... </td>
					<td> ... </td> 
				</tr> 
			</tbody>
		</table>

<tfoot />
<tfoot>...</tfoot>

	Элемент "<tfoot>" предназначен для хранения одной или нескольких строк, которые представлены внизу таблицы.
	Хотя тег "<tfoot>" в исходном коде должен быть определен до тега "<tbody>", браузеры отображают его в
	самом низу таблицы. В пределах таблицы разрешается использовать только один элемент "<tfoot>".
	
	Атрибуты тега "<tfoot>":
	
		align - Определяет выравнивание текста в строке.

		char - Выравнивание содержимого ячеек относительно заданного символа.

		charoff - Смещение содержимого ячеек относительно указанного символа.

		bgcolor - Цвет фона ячеек, которые расположены внутри контейнера <thead>.

		valign - Выравнивание содержимого ячеек по вертикали.
	
	Пример использования тега "<tfoot>":
	
		<table width="600">
			<tfoot align="center" style="background: #ffc">
				<tr>
					<td>Ячейка 1, расположенная в TFOOT</td>
					<td>Ячейка 2, расположенная в TFOOT</td> 
				</tr> 
			</tfoot>

			<tbody align="right" style="background: silver">
				<tr>
					<td>Ячейка 3, расположенная в TBODY</td>
					<td>Ячейка 4, расположенная в TBODY</td> 
				</tr> 
			</tbody>
		</table>

<colgroup />
<colsgroup>...</colgroup>

	Тег "<colgroup>" предназначен для задания ширины и стиля одной или нескольких колонок таблицы. Этот тег позволяет
	уменьшить код таблицы за счет сокращения повторяющихся атрибутов, и при наличии этого тега браузер начинает
	показывать содержимое таблицы, не дожидаясь ее полной загрузки. Тег "<colgroup>" можно использовать в
	комбинации с тегом "<col>", который определяет характеристики одной или нескольких колонок.

	Обычно закрывающий тег не требуется, но если "<colgroup>" выступает как контейнер для элементов "<col>",
	тогда следует добавить тег "</colgroup>" в конце группы.

	Разница между свойствами тегов "<colgroup>" и "<col>" не очень велика и состоит в следующем.
	"<colgroup>" позволяет объединять колонки в определенные группы, также при добавлении атрибута "rules="groups""
	к тегу "<table>" браузер будет рисовать линию только между колонками, созданными с помощью "<colgroup>".
	В остальных случаях поведение колонок назначенных через элементы "<colgroup>" и "<col>" идентично.
	
	Атрибуты тега "<clogroup>":
	
		align - Устанавливает выравнивание содержимого колонки по краю.

		char - Выравнивает содержимое колонки по заданному символу.

		charoff - Сдвигает содержимое ячейки относительно заданного символа.

		span - Количество колонок, к которым следует применять атрибуты.

		valign - Задает вертикальное выравнивание содержимого колонки.

		width - Ширина колонок.
		
	Пример использования тега "<colgroup>":
	
		 <table width="450" cellpadding="2" cellspacing="0" border="1" rules="groups">
		  <colgroup width="150">
		  <colgroup span="9" align="center" width="50">
		   <col span="5">
		   <col span="4">
		  </colgroup>
		  <tr> 
		   <td>&nbsp;</td><td>1995</td><td>1996</td><td>1997</td>
		   <td>1998</td><td>1999</td><td>2000</td><td>2001</td>
		   <td>2002</td><td>2003</td>
		  </tr>
		  <tr> 
		   <td>Нефть</td><td>5</td><td>7</td><td>2</td><td>8</td>
		   <td>3</td><td>34</td><td>62</td><td>74</td><td>57</td>
		  </tr>
		 </table>

<col />

	Тег "<col>" задает ширину и другие характеристики одной или нескольких колонок таблицы. При наличии
	этого тега браузер начинает показывать содержимое таблицы, не дожидаясь ее полной загрузки.
	Тег "<col>" можно использовать совместно с тегом "<colgroup>", который задает группу колонок,
	обладающих общими характеристиками.
	
	Артибуты тега "<col>":
	
		align - Устанавливает выравнивание содержимого колонки по краю.

		char - Выравнивает содержимое колонки по заданному символу.

		charoff - Сдвигает содержимое ячейки относительно заданного символа.

		span - Количество колонок, к которым следует применять параметры.

		valign - Задает вертикальное выравнивание содержимого колонки.

		width - Ширина колонок.
		
	Пример использования тега "<col>":
	
		<table width="400" border="0" cellpadding="5" cellspacing="0">
			<col width="150" valign="top">
			<col width="250" valign="top">
			<tr>
				<td style="background: #B0B28E">Lorem ipsum dolor sit amet.
				</td>
				<td style="background: #CCCCCC">Lorem ipsum dolor sit amet. 
				</td>
			</tr>
		</table>

<tr>...<tr/>

	Тег для обозначения строки в таблице, созданной с помошью тега "<table>", где вместо "..." - будут столбцы с содержимым
	(тег "<td>" или тег "<th>"). Подробнее в теге "<table>".

<td>...</td>

	Тег, для обозначения столбца в строке, созданной с помощью тега "<tr>" в таблице, в свою очередь созданной с помощью тега
	"<table>", где "..." - это содержимое ячейки строки-столбца.

<th>...</th>

	Тег, использующийся для установки содержимого ячейки заголовком определённго столбца или строки, созданных с помощью тегов
	"<tr>" или "<td>" в таблице, в свою очередь созданной с помощью тега "<table>", где "..." - это содержимое ячейки.

<form>...</form>

	Тег, для сбора информации от пользователя, где "..." - его содержимое.

	Пример использования тега "<form>":

		<form action="httm://vk.com" method="POST" target="_blank">
			<input type="text" name="login" />
			<br/>
			<input type="password" name="password" />
		</form>

	В этом теге используются такие атрибуты как "action", "method", "target", где "action" - это адрес, который должен
	открыться после отправки формы, "method" - это метод "HTTP" запроса (подробнее в атрибуте "method"), "target" - это
	способ открытия адреса (если требуется) - в этом случае - в новой вкладке.
	В содержимом тега имеются теги "<input>" - подробнее в теге "<input>".
	После отправки формы, данные будут обработаны на сервере с использованием языка "PHP".
	Чтобы отключить автозаполнение формы, нужно добавить атрибут "autocomplete" со значением "off".

<input .../>...

	Самостоятельный тег тега "<form>", который используется для вставки элементов ввода, где первый "..." - его аргументы,
	а второй "..." - это навание текущего элемента ввода "<input>", которое должно отобразиться (если требуется).

	Пример тега "<input>":

		<form action="http://vk.com">
			<input type="radio" name="gender" value="male" />Мужской
			<br/>
			<input type="radio" name="gender" value="female" />Женский
		</form>

	Данный тег включает в себя такие аргументы как: "type", "name", "value" и тд, где "type" - это атрибут - тип элемента
	ввода, который будет один из: "text", "password", "radio", "URL", "submit" и тд., где, если был выбран тип "radio", то
	пользователь сможет выбрать только один из представленных вариантов в форме, (подробнее в атрибуте "type"),
	"name" - это не отображаемое имя данного элемента ввода, "value" - значение текущего элемента ввода (тега "<input>")
	(подробнее в атрибуте "value"). После тега "<input>" (на месте второго "..."), может быть имя всего элемента ввода, если
	оно требуется.
	Чтобы создать текстовую подсказку в форме (в поле тега "<input>"), нужно добавить атрибут "placeholder".
	Чтобы автоматически поставить курсор в поле ввода после загрузки страницы, нужен самостоятельный атрибут "autofocus".
	Чтобы сделать заполнение формы обязательным, нужно поставить самостоятельный атрибут "required".

	Для того, чтобы добавить выпадающий список в поле ввода, нужно добавить атрибут "list",  с использованием тега
	"<datalist>". В атрибуте "list" будет значение атрибута "id" тега "<datalist>".

	Например:

		<input name="list" type="text" list="colors" />
		<datalist id="colors">
			<option value="Красный">
			<option value="Синий">
			<option value="Голубой">
		</datalist>

	Аргументы атрибута "type" тега "<input>" в "HTML5":

		color

		date

		datetime

		datetime-local

		email

		month

		number

		range

		search

		tel

		time

		url

		week

	Аргументы тега "<input>" в "HTML5":

		autofocus

		form

		formaction

		formtype

		formmethod

		formnovalidate

		formtarget

		height and width

		list

		min and max

		multiple

		pattern (regexp)

		placeholder

		required

		step

	Чтобы при клике на тект, рядом с полем ввода (текст связанный - указывающий на поле ввода) активировалось само поле
	ввода (курсор становился в поле вода), то нужно использовать тег "<input>" вместе с тегом "<label>". Подробнее в
	теге "<label>".

<textarea>...</textarea>

	Тег, позволяющий создать текстовое поле ввода, где "..." его содержимое (если требуется).

	Пример текстового поля ввода:

		<h1><span>Contact Me</span></h1>
		<form>
			<input type="text" name="name" />
			<br/>
			<input type="email" name="email" />
			<br/>
			<textarea name="message">
			</textarea>
			<input type="submit" class="submit" value="SEND" />
		</form>

	Чтобы создать текстовую подсказку в форме (в поле тега "<input>"), нужно добавить атрибут "placeholder".
	Чтобы автоматически поставить курсор в поле ввода после загрузки страницы, нужен самостоятельный атрибут "autofocus".
	Чтобы сделать заполнение формы обязательным, нужно поставить самостоятельный атрибут "required".

<font>...</font>

	Тег, позволяющий назначить цвет, шрифт и размер текста, где "..." - сам текст. Не поддерживается в "HTML5".

	Пример с использованием тега "<font>":

		<h1>
			<font color="#FFFFFF">Заголовок белым цветом
			</font>
		</h1>

<frameset>...</frameset>

	Глобальный тег, позволяющий определить структуру фреймов на веб-странице. Тег "<frameset>" состоит из фреймов
	(тег "<frame>"), на месте "...", позволяющие вставить документы ("HTML", видео и тд.). Очередь фреймов внутри тега
	"<frameset>" соответствует порядку: слева-направо, сверху-вниз. В тег "<frameset>" могут входить такие атрибуты как:
	"border="..."" - размер	линии границы между фреймами, где "..." - сам размер; "bordercolor="..."" - цвет линии границы,
	где "..." - сам цвет; "cols="..."" - разделение фреймов по вертикали в размерах или пропорциях, где "..." - его  размеры
	или пропорции, подробнее в атрибуте "cols"; "rows="..."" - разделение фреймов по горизонтали в размерах или пропорциях,
	где "..." - его размеры или пропорции, подробнее в атрибуте "rows"; "frameborder="..."" - атрибут, определяющий,
	установить линии границ между фреймами или нет (по умолчанию - да), где на месте "..." - будет "no", если не нужны линии
	границ между фреймами; "framespacing="..."" - аналог атрибута "border", задает ширину границы, где "..." - сама ширина.
	Тег "<frameset>" нельзя использовать вместе с тегом "<body>" в одном "HTML" документе.
	Пример использования тега "<frameset>" смотрите в теге "<frame>".

<frame ... />

	Самостоятельный глобальный тег, определяющий свойства отдельного фрейма, на которые делится окно браузера, и позволяющий
	вставить документы ("HTML", видео и тд.), где "..." - атрибуты фрейма. Использующиеся атрибуты в теге "<frame>":
	"bordercolor" - подробнее в атрибуте "bordercolor"; "frameborder" - подробнее в атрибуте "bordercolor";
	"name="..."" - обязательное имя текущего фрейма, где "..." - само имя; "noresize" - подробнее в атрибуте "noresize";
	"scrolling" - подробнее в атрибуте "scrolling"; "src" - источник информации, подробнее а атрибуте "src".

	Пример использования тега "<frame>":

		<frameset rows="20%,*" cols="*" border="2px" bordercolor="green"  >
			<frame src="html.html" name="Top" scrolling="no" noresize />
			<frameset cols="30%, 30%, *" rows="*" bordercolor="blue" >
				<frame src="htmlLeft.html" name="Left" scrolling="yes" noresize />
				<frame src="htmlMain.html" name="Main" scrolling="yes" noresize />
				<frame src="htmlRight.html" name="Right" scrolling="yes" noresize />
			</frameset>
		</frameset>

<iframe>...</iframe>

	Создает плавающийся фрейм, который находится внутри обычного документа, позволяющий загружать в область заданных
	размеров любые другие независимые документы. Тег "<iframe>" является контейнером, содержание которого игнорируется
	браузерами, не поддерживающими данный тег. Для таких браузеров можно указать альтернативный текст, который увидят
	пользователи. Он должен располагаться между элементами "<iframe>" и "</iframe>" (вместо "...").
	В тег "<iframe>" могут входить стандартные атрибуты, позволяющие изменить размер, задать отступы, задать прозрачность,
	задать обязательное уникальное имя, задать путь использующегося документа ("HTML", видео и тд.), и тд.
	Входит в содержимое тега "<body>" (можно использовать и без тега "<body>").
	Данный тег схож с тегами: "<object>", "<embed>".

	Пример использования тега "<iframe>" со вставкой видео с сайта "YouTube":

		<body>
			<div align="center" >
				<br/>
				<br/>
				<iframe width="1024" height="768" src="https://www.youtube.com/embed/jNQXAC9IVRw" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
				</iframe>
			</div>
		</body>

<noframes>...</noframes>

	Тег, использующийся, если браузер не поддерживает (не видит) теги "<frameset>" с "<frame>", чтобы сообщить пользователю
	что в данном браузере отображение фреймов не поддерживается. Само сообщение заключается между тегами "<noframes>" и
	"</noframes>" (на месте "..."). Браузеры, которые могут работать с фреймами, полностью игнорируют тег "<noframes>" и
	его содержимое.

	Пример использования тега "<noframes>":

		<frameset cols="100,*">
				<frame src="menu.html" name="leftFrame" />
				<frame src="content.html" name="mainFrame" />

				<noframes>Ваш браузер не поддерживает фреймы.</noframes>
		</frameset>

<progress>...</progress>

	Используется для отображения прогресса завершенности задачи. Изменение значения происходит через "JavaScript". Вместо "..."
	будут атрибуты "max", "min", "value", где "max" - это максимальное значение прогресса, "min" - минимальное значение
	прогресса, "value" - текущее значение прогресса (текущая позиция).

	Пример использования тега "<progress>":

		<progress max="100" min="0" value="20">Progress
		</progress>	

<meta ... />

	Самостоятельный тег,  определяет метатеги, которые используются для хранения информации предназначенной для браузеров и
	поисковых систем, например, механизмы поисковых систем обращаются к метатегам для получения описания сайта, ключевых слов
	и других данных. Разрешается использовать более чем один метатег, все они размещаются в контейнере тега "<head>".
	Тегов "<meta>" может быть несколько в одном документе. Подробнее о теге "<meta>" и его атрибутах в документе "Метатеги".

<datalist>...</datalist>

	Тег, необходимый чтобы создать выпадающий список (для тега "<input>"), где на месте "..." - будут варианты списка,
	которые будут обозначены тегом "<option>". Самому тегу задается уникальный "id", который необходим, чтобы указать
	какой список использовать, и который будет указан как аргумент атрибута "list" тега "<input>".
	
	Примечание: Данный тег схож с тегом "<select>", и отличается тем, что он позволяет самому написать недоступный вариант из
	списка. Тег "<datalist>" не используется в контейнере тега "<form>" напрямую, только если использовать в контейнере тега
	"<input>", а он будучи в свою очередь в контейнере "<form>". При использовании тега "<datalist>", по умолчанию поле выбора
	пуста.

	Пример использования тега "<datalist>":

		<input name="list" type="text" list="colors" />
		<datalist id="colors">
			<option value="Красный">
			<option value="Синий">
			<option value="Голубой">
		</datalist>

<option>...</option>

	Тег, создающий вариант из выпадающего списка ("<select>" или "<datalist>"), где на месте "..." - будут его аргументы
	(например аргумент самого значения варианта "value"). Пример использования тега "<option>" приведен в тегах "<datalist>",
	"<select>" и "<input>" и тд. Для создания заголовков в списке, данный тег используется вместе с тегом "<optgroup>".
	
	Примечание: При использовании тега "<option>" с тегом "<datalist>", названия вариантов будут браться как из значения
	аргумента "value", так и из	контейнера самого тега "<option>", при условии, если значение аргумента "value" и значение
	контейнера самого тега "<option>" не равны одному значению (отличаются), а при использовании с тегом "<select>" в теге
	"<form>", название варианта будет браться только из контейнера самого тега "<option>". Для создания заголовков в списке,
	данный тег используется вместе с тегом "<optgroup>".

	
	Атрибуты тега <option>:
	
		disabled - заблокировать для доступа элемент списка.

		label - указание метки пункта списка.

		selected - заранее устанавливает определенный пункт списка выделенным.

		value - значение пункта списка, которое будет отправлено на сервер или прочитано с помощью скриптов.

<optgroup ... > ... <optgroup/>

	Данный тег представляет собой контейнер, внутри которого располагаются теги "<option>" объединенные в одну группу.
	Особенностью тега "<optgroup>" является то, что он не выделяется как обычный элемент списка, акцентируется с
	помощью жирного начертания, а все элементы, входящие в этот контейнер, смещаются вправо от своего исходного
	положения.

	Атрибуты тега "<optgroup>":

		disabled - блокирует доступ к группе списка.

		label - текст, который будет входить в список в виде заголовка группы.

	Пример использования тега "<optgroup>":

		<optgroup label = "Blacklist"> <!--Группа №1 -->
			<option value = "2PAC"> Tupac Amaru Shakur </option>
			<option value = "50cent"> Curtis Jackson </option>
			<option value = "Snoop Dogg" selected > Calvin Cordozar Broadus, Jr. </option>
		</optgroup>
		<optgroup label = "Whitelist"> <!--Группа №2 -->
			<option value = "Eminem">Marshall Bruce Mathers III</option>
		</optgroup>

<base ... />

	Тег, который устанавливает текущую директорию для ссылок для всей страницы, где на месте "..." - будут его атрибуты.
	У этого тега есть обязательный атрибут "href" и дополнительный "target". В атрибуте "href" будет указана
	директория (URL) для всей страницы, а в теге "target" способ (по желанию), по которому будут открываться все ссылки
	на странице (например в новой вкладке - "_blank"). Всегда размещается в контейнере тега "<head>".

<link />

	Самостоятельный тег. Устанавливает связь с внешним документом (например "CSS" документом). Всегда размещается в контейнере тега "<head>".
	В случае использования для привязки внешнего "CSS" документа, в теге обязательно будут присутствовать следующие
	атрибуты со значениями: "rel="stylesheet"", и "type="text/css"".
	Пример использования с внешним "CSS" документом:

		<link href="doc.css" rel="stylesheet" type="text/css" />

<noscript>...</noscript>

	Тег, использующийся чтобы поместить в него предупреждающее сообщение, если браузер не поддерживает скрипты
	("JavaScript").

	Пример использования тега "<noscript>":

		<html>
			<head>
				<title>Тег NOSCRIPT</title>
				<script type="text/javascript">
				alert("Hello, world!");
				</script>
			</head> 
			<body>
				<noscript><p>Ваш браузер не поддерживает скрипты!</p></noscript> 
			</body>
		</html>

<script>...</script>

	Тег для вставки "JavaScript" элемента (скрипта). Принимает следующие аргументы: "language="..."" - язык скрипта
	(например "javascript" вместо "...")(данный атрибут является устаревшим, и не должен быть использован);
	"type="..."" - тип скрипта (например "text/javascript" вместо "...")(данный атрибут так же больше е нужен, так
	как "JavaScript" является по умолчанию скриптовым языком в "HTML"); "src="..."" - атрибут, необходимый если
	используется внешний скрипт, для указания его адреса ("URL"), где на месте "..." - будет сам "URL";
	
	В теге "<script>" можно добавить такой атрибут как "defer". Атрибут "defer" откладывает выполнение скрипта
	до тех пор, пока вся страница не будет загружена полностью. Есть два варианта использования атрибута "defer":
	
		Самостоятельный:
		
			defer
			
		Со значением:
		
			defer="defer"
	
	Примеры использования тега "<script>" с атрибутом "defer":
	
		<script src="script.js" defer></script>
		
		<script src="script.js" defer="defer"></script>
		
	Примечание:

	В "Firefox 3.6" и старше атрибут "defer" игнорируется, если у тега "<script>" не указан атрибут "src". В "Firefox 3.5"
	поведение другое и "defer" работает даже для встроенных скриптов.
	
	Также в теге "<script>" можно добавить такой атрибут как "async". При наличии атрибута "async" браузер при возможности
	запускает скрипт асинхронно. Это означает, что указанный в атрибуте "src" файл будет выполняться без ожидания загрузки
	и отображения веб-страницы. В то же время и страница не ожидает результата выполнения скрипта,
	а продолжает загружаться как обычно.
	
	Пример использования тега "<script>" с атрибутом "async":
	
		<script src="scripts/async.js" async>...</script>

<style>...</style>

	Тег для вставки "CSS" оформления элемента.

<audio>...</audio>

	Добавляет, воспроизводит и управляет настройками аудиозаписи на веб-странице. Путь к файлу задается через атрибут
	"src" или вложенный тег "<source>". Внутри контейнера "<audio>" можно написать текст, который будет выводиться в
	браузерах, не работающих с этим тегом. Поддерживаемые форматы (не всеми браузерами): "mp3", "wav", "ogg", "aac".

	Атрибуты тега "<audio>":

		controls - добавляет панель управления у аудиофайлу.

		autoplay - звуковой файл начинает играть сразу после загрузки страницы.

		loop - повторяет воспроизведение звукового файла с начала после его завершения.

		preload - используется для загрузки файла вместе с загрузкой веб-страницы.

		src - путь к воспроизводимому файлу.

	Пример использования тега "<audio>" с атрибутом "src":

		<audio src="аудиофайл.mp3" controls >
		Элемент audio не поддерживается вышим браузером.
		</audio>

	Пример использования тега "<audio>" с использованием вложенного тега "<source>":

		<audio controls >
			<source src="аудиофайл.mp3" type="audio/mp3"/>
			<source />
			<source src="аудиофайл.ogg" type="audio/ogg"/>
			<source />
			Элемент audio не поддерживается вашим браузером.
		</audio>

	В контейнер "<audio>" добавляются несколько тегов "<source>" с указанием формата файла в атрибуте "<type>",
	на случай, если какой - либо формат не поддерживается браузером.

<video>...</video>

	Добавляет, воспроизводит и управляет настройками видеоролика на веб-странице. Путь к файлу задается через атрибут
	"src" или вложенный тег "<source>". Внутри контейнера "<video>" можно написать текст, который будет выводиться в
	браузерах, не работающих с этим тегом. Поддерживаемые форматы (не всеми браузерами): "mp4", "ogg", "webm".

	Атрибуты тега "<video>":

		controls - добавляет панель управления у видеофайлу.

		autoplay - видео файл начинает играть сразу после загрузки страницы.

		loop - повторяет воспроизведение видео файла с начала после его завершения.

		preload - используется для загрузки файла вместе с загрузкой веб-страницы.

		src - путь к воспроизводимому файлу.

		height - задает высоту области для воспроизведения видеоролика.

		width - задает ширину области для воспроизведения видеоролика.

	Пример использования тега "<video>" с атрибутом "src":

		<video width="1024" height="720" src="видеофайл.mp4" controls>
		Элемент video не поддерживается вышим браузером.
		</video>

	Пример использования тега "<video>" с использованием вложенного тега "<source>":

		<video controls>
			<source src="видеофайл.mp4" type="video/mp4">
			</source>
			<source src="видеофайл.ogg" type="video/webm">
			</source>
			Элемент video не поддерживается вышим браузером.
		</video>

	В контейнер "<video>" добавляются несколько тегов "<source>" с указанием формата файла в атрибуте "<type>",
	на случай, если какой - либо формат не поддерживается браузером.

<canvas>...</canvas>

	Создает область, в которой при помощи JavaScript можно рисовать разные объекты, выводить изображения,
	трансформировать их и менять свойства. При помощи тега <canvas> можно создавать рисунки, анимацию, игры и др.
	На месте "..." - будут такие атрибуты как - уникальный "id", ширина и высота области ("id="...""; "height="...";
	"width="..."";). Внутри контейнера "<canvas>" так же можно вставить текст, предупреждающий о том, что браузер не
	подерживает элемент "<canvas>".

<math>...</math>

	Позволяет вставить элементы "MathML", где "..." - его содержимое.

<object>...</object>

	Встраивает на "HTML" - страницу какие - либо объекты, которые браузер не в состоянии распознать.
	Например, это может быть "flash" - игра, изображения, аудио, видео, "java" - апплетов, "activeX" - элементов, "PDF".
	Данный тег схож с тегами: "<iframe>", "<embed>". В отличие от тегов "<iframe>", "<embed>", здесь вместо атрибута
	"src" используется атрибут "data".

	Атрибуты тега "<object>":

		Align - отвечает за выравнивание объекта относительно других элементов страницы.

		Classid - указывает браузеру, какую программу, плагин или апплет нужно загрузить.
		Эта программа в дальнейшем будет работать с объектом

		Например:

			<object classid="URL"></object>

		Вместо URL можно писать как абсолютный, так и относительный адрес.

		Data - это самый важный аргумент, поскольку в нем указывается адрес объекта.

		Например:

			<object type="application/x-shockwave-flash" data="Адрес_объекта">
			</object>

		Height и Width - задают высоту и ширину объекта соответственно.

		Type - определяет MIME тип данных, указанных в атрибуте data.
		Нужен для того, чтобы браузер подготовил необходимые ресурсы.

		Может принимать значения:

			application/x-shockwave-flash

			image/gif

			video/mp4

		Например:

			<object type="application/x-shockwave-flash" data="URL">
			К сожалению, объект не может быть отображен
			</object>

<param ... />

	Самостоятельный тег, использующийся для определения параметров для плагинов, встроенных в элемент <object>.

	Атрибуты тега "<param>":

		name - определяет имя параметра.

		type - указывает "MIME" - тип для параметра. Не поддерживается в "HTML5".

		value - указывает значение параметра.

		valuetype - указывает тип значения. Не поддерживается в "HTML5".

	Пример использования тега "<param>":

		<object data = "video.mp4" name = "videoObject"> <!--внедряем в страницу мультимедийный контент (видео)-->
			<param name = "autoplay" value = "1"> <!--параметр 1-->
			<param name = "allowFullScreen" value = "true"> <!--параметр 2-->
		</object>
		<object data =  "video.swf" name = "flashVideoObject" type = "application/x-shockwave-flash"> <!--добавляем флэш видео с параметром-->
			<param name = "loop" value = "true"> <!--параметр -->
		</object>

<svg>...</svg>

	Тег, для создания масштабируемой векторной графики (траектории, фигуры, буквы и нраф. изображения), где "..." - сама
	фигура. У тега "<svg>" есть следующие атрибуты: "width" - ширина создаваемого "svg" элемента, "heigh" - высота
	создаваемого "svg" элемента. На месте "..." - будет тег, создаваемой фигуры, например круг (см. теги "<circle>",
	"<rect>" и тд.).
	
	Среди атрибутов есть атрибут "viewBox="..."". Задает размер области "svg". Состоит из 4х значений.
	Первые два числа — координаты "X" и "Y" верхнего левого угла масштабируемой области, два других — её ширина и высота.
	Так как нельзя просто изменить размер "svg" элемента, нужно использовать атрибут "viewBox".
	
	Пример использования тега "<svg>" с атрибутом "viewBox":
	
		<svg viewBox="0 0 237 300" width="350" height="200"> ... </svg>

<circle ... />

	Самостоятельный тег, для создания "svg" элемента - круг, где вместо "..." - будут его атрибуты.

	Атрибуты элемента "circle":

		cx="..." - горизонтальное расположение центра круга по оси "X" в элементе "svg", где "..."  - его значение.

		cy="..." - вертикальное расположение центра круга по оси "Y" в элементе "svg", где "..."  - его значение.

		r="..." - радиус создаваемого круга, где "..."  - его значение, где "..."  - его значение.

		fill="..." - задает цвет заливки круга, где "..."  - его цвет, или значение "none" - ничем не заполнять.
		По умолчанию цвет заливки - черный.

		stroke="..." - контур круга, где "..."  - его цвет.

	Значения атрибутов "cx" и "cy" должны входить в границы значений "width" и "heigh" тега "<svg>". Если в значении
	"width" было указано значение "100", то чтобы расположить центр круга по горизонтали элемента "svg", нужно в
	значении "cx" указать середину значения  "width", то есть она будет равна "50". И так же со значением "cy".

	Пример использования тега "<circle>":

		<svg width="200" height="200">
			<circle cx="100" cy="100" r="50" fill="green" />
		</svg>

<rect ... />

	Самостоятельный тег, для создания "svg" элемента - прямоугольник, где вместо "..." - будут его атрибуты.

	Атрибуты элемента "rect":

		width="..." - ширина фигуры.

		height="..." - высота фигуры.

		x="..." - горизонтальное расположение центра фигуры по оси "X" в элементе "svg", где "..."  - его значение.

		y="..." - вертикальное расположение центра фигуры по оси "Y" в элементе "svg", где "..."  - его значение.

		fill="..." - цвет аполнения фигуры.

	Значения атрибутов "x" и "y" должны входить в границы значений "width" и "heigh" тега "<svg>". Если в значении
	"width" (тега "<svg>") было указано значение "100", то чтобы расположить центр фигуры по горизонтали элемента "svg",
	нужно в значении "cx" указать середину значения  "width", то есть она будет равна "50". И так же со значением "cy".

	Пример использования тега "<rect>":

		<svg width="200" height="200">
			<rect width="30" height="30" x="20" y="20" fill="green" />
		</svg>

<line ... />

	Самостоятельный тег, для создания "svg" элемента - линия, где вместо "..." - будут его атрибуты.

	Атрибуты элемента "<line>":

		x1="..." - координаты начала линии (по оси "x").

		y1="..." - координаты начала линии (по оси "y").

		x2="..." - координаты конца линии (по оси "x").

		y2="..." - координаты конца линии (по оси "y").

<polyline ... />

	Самостоятельный тег, для создания "svg" элемента, составленная из нескольких отрезков линий, где вместо "..." -
	будут его атрибуты.

	Атрибуты элемента "<polyline>":

		points="... ..., ... ..., ... ..." - координаты ломанной линии, где первая группа "..." - начало ломанной
		линии по "x" и "y", вторая группа "..." - середина ломанной линии по "x" и "y", третья группа "..." - конец
		ломанной линии по "x" и "y".

	Пример использования тега "<polyline>":

		<svg width="2000" height="2000">
			<polyline points="100 100, 150 150, 200 100" />
		</svg>

<ellipse ... />

	Самостоятельный тег, для создания "svg" элемента - эллипс, где вместо "..." - будут его атрибуты.

	Атрибуты элемента "ellipse":

		cx="..." - горизонтальное расположение центра эллипса по оси "X" в элементе "svg", где "..."  - его значение.

		cy="..." - вертикальное расположение центра эллипса по оси "Y" в элементе "svg", где "..."  - его значение.

		rx="..." - координаты горизонтальной оси радиуса эллипса.

		ry="..." - координаты вертикальной оси радиуса эллипса.

		fill="..." - задает цвет заливки эллипса, где "..."  - его цвет, или значение "none" - ничем не заполнять.
		По умолчанию цвет заливки - черный.

		stroke="..." - контур эллипса, где "..."  - его цвет.

	Пример использования тега "<ellipse>":

		<svg width="500" height="500">
			<ellipse cx="200" cy="200" rx="150" ry="70" />
		</svg>

<polygon ... />

	Самостоятельный тег, для создания "svg" элемента - многоугольник, где вместо "..." - будут его атрибуты.

	Атрибуты элемента "<polygon>":

		points="... ..., ... ..., ... ..." - координаты многоугольника, где первая группа "..." - первая вершина
		фигуры по "x" и "y", вторая группа "..." - вторая вершина фигуры по "x" и "y", третья группа "..." - третья
		вершина фигуры по "x" и "y".

	Пример использования тега "<poligon>":

		<svg width="2000" height="2000">
			<polygon points="100 100, 200 200, 300 0" />
		</svg>

<animate ... />

	Самостоятельный тег, для создания анимации, где "..." - его атрибуты.

	Атрибуты элемента "<animate>":

		attributeName="..." - указывает, к какому атрибуту будет применяться анимация (далее в примере анимация
		будет применяться к атрибуту "x").

		from="..." - стартовое значение выбранного атрибута.

		to="..." - целевое значение выбранного атрибута.

		dur="..." - время, за которое должна произойти анимация.

		fill="..." - указывает, должно ли значение атрибута вернуться к своему первоначальному значению, после
		завершения анимации. Возможные значения: "remove" - сбрасывает значение; "freeze" - сохраняет значение
		атрибута "to";

		repeatCount="..." число повторений анимации. Чтобы сделать анимацию бесконечной, то нужно поставить в
		значение этого атрибута значение "indefinite".

	Пример использования тега "<animate>", в котором прямоугольник будет перемещаться в течении 3 секунд, а затем
	дважды повторит это действие:

		<svg width="1000" height="250">
			<rect width="150" height="150" fill="orange">
				<animate attributeName="x" from="0" to="2080" dur="3s" fill="freeze" repeatCount="indefinite" />
			</rect>
		</svg>

<path ... />

	Используется для создания траектории (линии) в элементе "<svg>", где "..." - его атрибуты.

	Атрибуты элемента "<path>":

		d="..." - атрибут, указываещий траекторию.

		Значения атрибута "d":

			M - "moveto".

			L - рисовать линию к указанным координатам.

			H - рисовать горизонтальную линию к указанным координатам.

			V - рисовать вертикальную линию к указанным координатам.

			C - "curveto".

			S - "smooth curveto".

			Q - "quadratic Bezier curve".

			T - "quadratic Bezier curveto"

			A - "elliptical Arc"

			Z - замыкание фигуры.

	Во всех выше перечисленных командах также могу использоваться строчные буквы. Заглавные назначают абсолютное
	положение, буквы в нижнем регистре назначают относительное положение.

	Пример использования тега "<path>":

		<svg width="500" height="500">
			<path d="M 0 0 L200 200 L200 0 Z" />
		</svg>

<button>...</button>

	Позвляет создать кнопку на странице, где на месте "..." - будет текст, помещаемый в саму кнопку (название кнопки).
	Если тег "<button>" находится в контейнере тега "<form>", то он автоматически является кнопкой отправки,
	как например если бы там стоял тег "<input>" с 'type="submit"'.

<embed>...</embed>

	Данный тег используется для загрузки и отображения объектов (например, видеофайлов, флэш-роликов, некоторых
	звуковых файлов и тд.), которые исходно браузер не понимает. Как правило, такие объекты требуют подключения к
	браузеру специального модуля, который называется плагин, или запуска вспомогательной программы.
	Данный тег схож с тегами: "<iframe>", "<object>".

	Атрибуты тега "<embed>":

		align="значение" — задание расположения относительно других объектов.

		autostart="true/false" — включить или отключить автостарт. Если автостарт включен, то проигрывание начинается
		сразу же после загрузки страницы.

		bgcolor="значение" — задает цвет фона (либо в виде #XXXXXX, либо название цвета). Поскольку объект уже имеет
		какой-то цвет, то особого смысла в использовании нету.

		height="значение" — высота объекта в пикселях или процентах. Например, 300px или 100%.

		hidden="значение" — отвечает за видимость объекта (false - объект виден, true - скрыт)

		hspace="значение" — горизонтальный отступ от границы до объекта. Значение задается в пикселях.

		vspace="значение" — вертикальный отступ от границы до объекта. Значение задается в пикселях.

		loop="значение" — количество циклов для проигрывания.

		pluginspage="Адрес_URL" — если у браузера нету возможности открыть объект через свои средства, то
		загружается внешний плагин, через который и происходит загрузка.
		Например:

			pluginspage="http://www.macromedia.com/go/getflashplayer"

		src="адрес_объекта" — адрес объекта для подключения.

		type="тип_файла" — определяет "MIME" - тип файла.
		Может принимать значения:

			application/x-shockwave-flash

			image/gif

			video/mp4

		volume="значение" — уровень громкости.

		width="ширина" — задаает ширину объекта в пикселях или процентах.

		menu="true/false" — включить или отключить меню.

<label>...</label>

	Тег "<label>" устанавливает связь между определенной меткой, в качестве которой обычно выступает текст, и элементом
	формы ("<input>", "<select>", "<textarea>"). Такая связь необходима, чтобы изменять значения элементов формы при
	нажатии курсором мыши на текст. Кроме того, с помощью <label> можно устанавливать горячие клавиши на клавиатуре и
	переходить на активный элемент подобно ссылкам. Существует два способа связывания объекта и метки. Первый заключается
	в использовании идентификатора "id" внутри элемента формы и указании его имени в качестве атрибута "for" тега "<label>".
	При втором способе элемент формы помещается внутрь контейнера "<label>".

	Атрибуты тега "<label>":

		for - в данном атрибуте следует указывать значение атрибута "id" того поля ввода, к которому привязана метка
		"<label>".

		form - определяет форму с которой будет связана метка. В качестве значения атрибута выступает идентификатор
		элемента "<form>". Этот атрибут позволяет размещать метки в произвольном месте документа, а не только в
		качестве потомка элемента "<form>".

		accesskey - задает горячую клавишу, с помощью которой можно перейти к привязаному к метке
		(через атрибут "for") элементу формы.

	Пример использования тега "<label>" первым способом (через уникальный идентификатор "id" и атрибут "for"):

		<label for="mail">Укажите ваш e-mail:</label>
		<input id="mail" type="email" name="e-mail" placeholder="Укажите свой e-mail:" required />

	Пример использования тега "<label>" второрым способом (использования тега "<input>" внутри контейнера тега "<label>").

		<label>Введите ваше имя:
			<input type="text" name="name" plaseholder="Укажите ваше имя:" required />
		</label>

<select>...</select>

	Тег "<select>" позволяет создать элемент интерфейса в виде раскрывающегося списка (для тега "<form>"),
	а также список с одним или множественным выбором, как показано далее. Конечный вид зависит от использования атрибута
	"size" тега "<select>",	который устанавливает высоту списка. Ширина списка определяется самым широким текстом,
	указанным в теге "<option>", а также может изменяться с помощью стилей. Каждый пункт создается с помощью тега
	"<option>", который должен быть вложен в контейнер "<select>". Если планируется отправлять данные списка на сервер,
	то требуется поместить элемент "<select>" внутрь формы. Это также необходимо, когда к данным списка идет обращение
	через скрипты.
	
	Примечание: Данный тег схож с тегом "<datalist>", и отличается тем, что не позволяет самому написать недоступный
	вариант из списка. Тег "<select>" не используется напрямую в контейнере тега "<input>". При использовании тега
	"<select>", по умолчанию в поле выбора будет первый вариант из списка.

	Атрибуты тега "<select>":

		accesskey - позволяет перейти к списку с помощью некоторого сочетания клавиш.

		autofocus - устанавливает, что список получает фокус после загрузки страницы.

		disabled - блокирует доступ и изменение элемента.

		form - связывает список с формой.

		multiple - позволяет одновременно выбирать сразу несколько элементов списка.

		name - имя элемента для отправки на сервер или обращения через скрипты.

		required - список обязателен для выбора перед отправкой формы.

		size - количество отображаемых строк списка.

		tabindex - определяет последовательность перехода между элементами при нажатии на клавишу "TAB".

	Пример использования тега "<select>":

		<select id="phone" name="phone">
			<option value="iphone 6s">iPhone 6S</option>
			<option value="lumia 950">Lumia 950</option>
			<option value="nexus 5x">Nexus 5X</option>
			<option value="galaxy s7">Galaxy S7</option>
		</select>

<header>...</header>

	Задает "шапку" сайта или раздела, в которой обычно располагается заголовок, где на месте "..." - будет его
	содержимое.

<nav>...</nav>

	Определение основной навигации на сайте (меню), где на месте "..." - будут ссылки и тд.			

<main>...</main>

	Предназначен для основного содержимого документа. Содержимое должно быть уникальным и не включать типовые блоки вроде
	шапки сайта, подвала, навигации, боковой панели, формы поиска и тп. На месте "..." - сам контент.

<article>...</article>

	Определение статьи или новости (повторяющая информация). На месте "..." - сам контент.

<section>...</section>

	Задаёт раздел документа, может применяться для блока новостей, контактной информации, глав текста, вкладок в диалоговом
	окне и др. Раздел обычно содержит заголовок. Допускается вкладывать один тег "<section>" внутрь другого. Не является
	заменой тегу "<div>". На месте "..." - сам контент.

<aside>...</aside>

	Определяет блок сбоку от контента для размещения рубрик, ссылок на архив, меток и другой информации. Такой блок, как
	правило, называется "сайдбар" или "боковая панель". На месте "..." - сам контент. Так же тег может использоваться как
	сноска к основной статье (определения и тд.).

<figure>...</figure>

	Определение автономного контента (например кусок кода, картинка и тд.). На месте "..." - сам контент.

<figcaption>...</figcaption>

	Создание подписи для тега "<figure>" (определение). На месте "..." - сама подпись.

<details>...</details>

	Определение дополнительных сведений, появляющиеся при клике на кнопку(по умолчанию скрыты). На месте "..." - сам контент.
	
	Атрибуты тега "<details>":
	
		open="..." - Атрибут, задающий состояние тега по умолчанию. Чтобы дополнительные сведения были открыты по умолчанию,
		нужно вместо "..." вставить "open" ("open="open"").
		
	Пример использования тега "<details>":

		<details open="open" >Покажи, что у тебя есть!</details>

<summary>...</summary>

	Определение видимой подписи для тега "<details>" (то что будет показываться по умолчанию). На месте "..." - сама подпись.

<mark>...</mark>

	Визуальное выделение части текста (например для выдачи как результат поиска). На месте "..." - сама выделяемая часть текста.

<time>...</time>

	Помечает текст внутри тега "<time>" как дата, время или оба значения. Может указываться непосредственно внутри контейнера
	"<time>", либо задаваться через атрибут "datetime". Используется часто для поисковых роботов и тд.
	
	Атрибуты тега "<time>":
	
		datetime - задает дату, время или оба значения для текста (в определенном формате).
		
		pubdate - указывает дату публикации документа (в определенном формате).
		
	Первый пример использования тега "<time>":
	
		<p>
			Курс стартует <time>2018.05.03 20:00</time>.
			Приходите!
		</p>
		
	Второй пример использования тега "<time>" (обеспечивает читатабельность как для поискового робота, так и для
	человека):
	
		<p>
			Курс стартует
			<time datetime="20018-05-03 20:00:00">
			3 мая 2018 в 20:00
			</time>.
			Приходите!
		</p>

<footer>...</footer>
			
	Задаёт "подвал" сайта или раздела, в нём может располагаться имя автора, дата документа, контактная и правовая
	информация, где на месте "..." - будет его содержимое.

<source ... />

	Тег, указывающий источник входного контента, где на месте "..." - будут кго атрибуты.
	Примеры использования тега "<source>" приведены в тегах "<audio>", "<video>" и тд.

<code>...</code>

	Предназначен для отображения одной или нескольких строк текста, который представляет собой программный код.
	Сюда относятся имена переменных, ключевые слова, тексты функции и т.д. Браузеры обычно отображают содержимое
	контейнера "<code>" как моноширинный текст уменьшенного размера. В отличие от тега "<pre>" дополнительные
	пробелы внутри контейнера "<code>" не учитываются, так же, как и переносы текста.
	Поэтому используйте тег "<br>" или "<p>" для создания переносов.

<meter>...</meter>

	Используется для вывода значения в некотором известном диапазоне. Используется преимущественно для отображения
	числовых значений, например, количества результатов поиска, объема жидкости, давления и др.
	
	Форма синтаксиса тега "<meter>":
	
		<meter value="значение">текст</meter>
		
	Атрибуты тега "<meter>":
	
		value - Устанавливает значение. Обязательный атрибут.
		
		min - Задает минимально возможное значение.
		
		max - Задает максимально возможное значение.
		
		low - Определяет предел, при достижении которого значение считается низким.
		
		high - Определяет предел, при достижении которого значение считается высоким.
		
		optimum - Определяет наилучшее или оптимальное значение.
		
	Пример использования тега "<meter>":
	
		<p>Температура воды</p>
		<meter value="0" max="100" low="10" high="60">Низкая</meter>
		<meter value="30" max="100" low="10" high="60">Нормальная</meter>
		<meter value="80" max="100" low="10" high="60">Горячая</meter>
		<meter value="100" max="100">Кипяток</meter>
		
	Браузеры, которые поддерживают тег "<meter>", отображают значение в виде рисунка, на котором цветом
	помечается текущее значение в указанном диапазоне. Остальные браузеры выводят текст, написанный внутри тега "<meter>".

<blockquote>...</blockquote>

	Тег "<blockquote>" предназначен для выделения длинных цитат внутри документа. Текст,
	обозначенный этим тегом, традиционно отображается как выровненный блок с отступами слева и справа (примерно по 40 пикселей),
	а также с отбивкой сверху и снизу.
	
	Атрибуты:
	
		cite - Адрес, который указывает на источник цитаты.
	
	Пример использования тега "<blockquote>":
	
		<blockquote cite = "https://ru.wikipedia.org/wiki/Pecunia_non_olet">
			Деньги не пахнут - крылатое латинское выражение. Слова, приписываемые императору Веспасиану,
			якобы произнесенные им после получения денег от налога на общественные уборные Рима
			и обращённые к его сыну Титу, который выразил неудовольствие по этому поводу.
		</blockquote>

--------------------------------------------------------------------------------------------------------------------------------------------