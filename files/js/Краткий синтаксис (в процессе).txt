-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Объявление примитивов/переменных и объектов:

	var

	let

	const

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Типы данных:

	Примитивные типы данных:

		Number
		
			Infinity
			
			"0x"
			
			"0b"
			
			"0o"
		
		NaN
		
		BigInt
		
		String
		
		Boolean

		Null
		
		Undefined
		
		Symbol
		
	Особенные типы данных:
	
		Object
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы чисел:

	toFixed(<n>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы строк:

	length;
	
	charAt(<позиция>);
	
	toLowerCase();
	
	toUpperCase();
	
	trim();
	
	repeat(<количество раз>);
	
	indexOf(<подстрока>, <позиция (опционально)>);
	
	lastIndexOf(<подстрока>, <позиция (опционально));
	
	includes(<подстрока>, <позиция (опционально)>);
	
	startsWith(<подстрока>);
	
	endsWith(<подстрока>);
	
	slice(<позиция начала>, <позиция конца (опционально)>);
	
	split(<разделитель>, <количество элементов (опционально)>;
	
	substring(<позиция начала>, <позиция конца (опционально)>);
	
	substr(<позиция начала>, <длина подстроки (опционально)>);
	
	codePointAt(<позиция>);
	
	localeCompare(<строка>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы объекта "String":

	fromCodePoint(<код в формате "UTF-16">);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Преобразование типов:

	String(<аргумент>);
	
	Number(<аргумент>);
	
		parseInt(<аргумент>, <система счисления(опционально)>);
		
		parseFloat(<аргумент>, <система счисления(опционально)>);
	
	<number>.toString(<base>);
	
	Boolean();
	
	Преобразование объектов в примитивы:
	
		[Symbol.toPrimitive](hint){}
		
		toString(){}
		
		valueof(){}
		
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Строковые операторы.

Конкатенация:

	+
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Математические операторы и операторы присваивания:

	+

	-

	*

	/

	%

	++

	--
	
	**

	=

	+=

	-=

	*=

	/=

	%=

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Инкремент. Постинкремент. Декремент. Постдекркмент:

	x++

	x--

	++x

	--x

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Операторы/Методы сравнения:

	==

	===

	!=

	!==

	>

	<

	>=

	<=
	
	isFinite(<аргумент>);
	
	isNaN(<аргумент>);
	
	Object.is(<аргумент>, <аргумент2>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Управляющий символ "\":

	\'

	\"

	\\

	\n

	\r

	\t

	\b

	\f

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Булевые значения:

	true

	false
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
Логические операторы:

	&&

	||

	!

	(<условие>) ? <выражинение для истинно>: <выражинение для ложь>;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Интерполяция строк:

	`${<имя переменной>}`

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Операторы условий, и циклов:

	if (<условие>) {<выражение>}

	else if (<условие>) {<выражение>}

	else {<выражение>}
	
	(<условие) ? <выражение для "истина"> : <выражение для "ложь">;

	switch (<имя сравниваемой переменной>) {
		case <значение>:
			<выражение>;
			break;
		default: <выражение>;
	}

	for (<начальное значение переменной>; <условие цикла>; <выражение для конца итерации>) {<выражение>}
	
		for (let <ключ> in <объект>){<выражение>}
		
		for (let <элемент> of <массив>){<выражение>}

	while (<условие цикла>) {<выражение>}

	do {<выражение>} while (<условие цикла>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Метки конструкций (label):

	<метка> : <выражение/цикл>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Операторы/Директивы - Общие:

	return;

	break;

	continue;
	
	typeof

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Функции:

	function <имя фунции> (<принимаемые параметры/аргументы>) {<тело функции>}

	let <имя переменной для функции> = function (<принимаемые параметры/аргументы>) {<тело функции>}

	(<принимаемые параметры/аргументы>)=>{<тело функции>}
	
	(<объявление и тело функции>)(<параметры функции>);
	
	let str = func`моя строка`;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Дебаггер.

	debugger;
	
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Объекты.

	let obj = {};
	
	let obj = new Object();

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы/операторы объектов.

	delete	<объект.свойство>;
	
	<ключ/свойство> in <объект>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы встроенного объека "Object":

	Object.assign(<объект цель>, <объекты источники>);
	
	Object.is(<аргумент>, <аргумент>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Массивы.

	let arr = [];
	
	let arr = new Array();

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы массивов:

	length;
	
	pop();
	
	push(<элементы>);
	
	shift();
	
	unshift(<элементы>);
	
	toString();
	
	splice(<позиция>, <количество (опционально)>, <новый элемент (может быть несколько)>);
	
	slice(<позиция начала (опционально)>, <позиция конца (опционально)>);
	
	forEach(function(<элемент>, <индекс>, <сам массив>){});
	
	indexOf(<подстрока>, <позиция (опционально)>);
	
	lastIndexOf(<подстрока>, <позиция (опционально));
	
	includes(<подстрока>, <позиция (опционально)>);
	
	find(function(<элемент>, <индекс (опционально)>, <сам массив (опционально)>){}, <thisArg>);
	
	findIndex(function(<элемент>, <индекс (опционально)>, <сам массив (опционально)>){}, <thisArg>);
	
	filter(function(<элемент>, <индекс (опционально)>, <сам массив (опционально)>){}, <thisArg>);
	
	map(function(<элемент>, <индекс (опционально)>, <сам массив (опционально)>){}, <thisArg>);
	
	sort(<фукнция колбэк>);
	
	reverse();
	
	join(<соеденитель>);
	
	reduce(function(<старое значение>, <текущий элемент>, <индекс элемента (опционально)>, <сам массив (опционально)>){}, <изначальное значение (опционально)>);
	
	reduceRight(function(<старое значение>, <текущий элемент>, <индекс элемента (опционально)>, <сам массив (опционально)>){}, <изначальное значение (опционально)>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы объека "Array":

	Array.isArray(<аргумент>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Методы объека "Symbol":

	Symbol.hasInstance
	
	Symbol.isConcatSpreadable
	
	Symbol.iterator
	
	Symbol.toPrimitive

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Конструкторы. Ключевое слово "new".

	function Conctructor (){}
	
	let child = new Constructor();

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------








































-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Список Методов/Функций "JavaScript":

	alert(<передаваемое содержимое>);
	
	prompt(<текст для отображения в окне>, <содержимое по умолчанию (опционально)>);
	
	confirm(<вопрос>);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	





































